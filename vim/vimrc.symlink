filetype off

call pathogen#infect()

syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.

let g:solarized_termcolors=256
set t_Co=16
set background=dark
colorscheme solarized

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set nowrap

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set number                        " Show line numbers.
set ruler                         " Show cursor position.

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.
set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

set nowrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.

set title                         " Set the terminal's title

set visualbell                    " No beeping.

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set noswapfile

set tabstop=2                    " Global tab width.
set shiftwidth=2
set softtabstop=2
set expandtab

set laststatus=2                  " Show the status line all the time

"Directories for swp files
set backupdir=~/tmp/vim//
set directory=~/tmp/vim//

" Sane searching
nnoremap / /\v
vnoremap / /\v
set gdefault
set showmatch
nnoremap <tab> %
vnoremap <tab> %

" reselect after indent/outdent
vnoremap < <gv
vnoremap > >gv

" clear search highlights:
noremap <silent><Leader>/ :nohls<CR>

" moving lines (alt+j)
nnoremap <leader>j :m+<CR>==
nnoremap <leader>k :m-2<CR>==
inoremap <leader>j <Esc>:m+<CR>==gi
inoremap <leader>k <Esc>:m-2<CR>==gi
vnoremap <leader>j :m'>+<CR>gv=gv
vnoremap <leader>k :m-2<CR>gv=gv

" Clear search results
nnoremap <leader><space> :noh<cr>

" Show invisibles
" set list listchars=tab:▸\ ,eol:¬,trail:·
set list listchars=tab:▸\ ,trail:·

" Ack
nnoremap <leader>a :Ack --ignore-dir=log 

" Navigating splits
nnoremap <leader>w <C-w>v<C-w>l
" nnoremap <leader>s <C-w>s<C-w>j
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" JSON syntax highlighting
au BufRead,BufNewFile *.json set filetype=json

" Turn off auto-indention
map ni :set invai<cr>

" Bubble single lines
nmap <C-Up> [e
nmap <C-Down> ]e
" Bubble multiple lines
vmap <C-Up> [egv
vmap <C-Down> ]egv

" For Textmate style indention
nmap <D-[> <<
nmap <D-]> >>
vmap <D-[> <gv
vmap <D-]> >gv

" Configure spell checking
"nmap <silent> <leader>s :set spell!<CR>
set spelllang=en_us

" Show hide NERDTree
nmap <silent> <leader> :NERDTreeToggle<CR>

" Gist setup
let g:gist_clip_command = 'pbcopy'
let g:gist_open_browser_after_post = 1

" Command-T setting
let g:CommandTMaxFiles=20000

" Strip whitespace on save
fun! <SID>StripTrailingWhitespaces()
    let l = line(".")
    let c = col(".")
    %s/\s*$//
    call cursor(l, c)
endfun

command -nargs=0 Stripwhitespace :call <SID>StripTrailingWhitespaces()
autocmd BufWritePre *.feature,*.rb,*.php,*.rake,*.pl,*.pm,*.css,*.scss,*.js,*.coffee,*.erb Stripwhitespace

"folding settings
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use

set timeoutlen=250

" gundo:  http://sjl.bitbucket.org/gundo.vim/
" View the change history as a tree with preview
nnoremap <F5> :GundoToggle<CR>
let g:gundo_preview_bottom = 1 " tree on side, preview on bottom

" indicate insert mode
:autocmd InsertEnter,InsertLeave * set cul!

" map for RSpec
nmap <silent> <leader>r :!rspec %<CR>
